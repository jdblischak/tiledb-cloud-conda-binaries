name: Create conda environment for notebook Python kernel
on:
  push:
    paths:
      - '.github/workflows/notebook-python.yml'
      - 'environments/notebook-base-frozen.yaml'
  pull_request:
    paths:
      - '.github/workflows/notebook-python.yml'
      - 'environments/notebook-base-frozen.yaml'
  workflow_dispatch:
jobs:
  python:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -leo pipefail {0}
    steps:
      - uses: actions/checkout@v4
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          large-packages: false
      - name: Install base notebook environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Mambaforge
          environment-file: environments/notebook-base-frozen.yaml
          activate-environment: notebook
          use-mamba: true
      - name: Install conda packages
        run: |
          mamba install -y -c tiledb/label/for-cloud -c tiledb -c fastai -c pyviz -c bokeh -c conda-forge \
            python==3.9.* \
            cudatoolkit=11.4 \
            cudatoolkit-dev==11.4 \
            numpy==1.23.* \
            setuptools \
            s3contents \
            nbgitpuller \
            bash_kernel \
            jq \
            awscli \
            vim \
            plotly \
            ipywidgets \
            ipympl \
            yarn \
            graphviz \
            pydot \
            'pandas<2' \
            pyarrow \
            numba \
            jinja2==3.0.* \
            voila==0.3.4 \
            voila-gridstack \
            jupyter-server-proxy \
            opencv-python-headless \
            pytables \
            tree \
            scikit-learn==1.* \
            scikit-misc \
            snowflake-connector-python \
            itables \
            flask \
            flask_cors \
            jupyter_bokeh==3.0.3 \
            jupyter-panel-proxy \
            ipywidgets_bokeh \
            faiss-cpu \
            hnswlib \
            bqplot \
            ipyvuetify \
            scikit-image \
            langchain \
            huggingface_hub \
            openai \
            tiktoken \
            python-dotenv \
            sentence-transformers \
            'fsspec>2022' \
            git-lfs \
            torchvision \
            pytorch==1.12.* \
            pytorch_geometric \
            torchdata==0.4.1 \
            tensorflow-datasets \
            keras-applications \
            tensorflow==2.11.* \
            'cloudpickle<3'
      - name: List packages
        run: conda list
      - name: Export frozen conda environment
        run: conda list --explicit --md5 > notebook-python-frozen.yaml
      - name: Upload frozen conda environment as artifact
        uses: actions/upload-artifact@v4
        with:
          name: notebook-python-frozen
          path: notebook-python-frozen.yaml
          if-no-files-found: error
          retention-days: 14
      - name: Install conda packages (vcf-geo)
        run: |
          mamba install -y -c bioconda -c tiledb/label/for-cloud -c tiledb -c conda-forge \
            cmake \
            patch \
            cxx-compiler \
            c-compiler \
            make \
            bcftools \
            pybedtools \
            anndata \
            snakemake-minimal \
            cellxgene-census==1.10.1 \
            cartopy \
            datashader \
            descartes \
            folium \
            geos \
            geotiff \
            holoviews \
            laszip \
            libnetcdf \
            proj \
            proj-data \
            pystac \
            shapely \
            scikit-build \
            zstd-static \
            swig \
            ezdxf \
            trimesh \
            xesmf \
            harmonypy \
            episcanpy \
            cellrank \
            gseapy \
            bioinfokit \
            numpy==1.23.* \
            laspy \
            cvxpy==1.3.2

          mamba install -y -c conda-forge -c tiledb openslide \
            openslide-python \
            scvi-tools
      - name: List packages (vcf-geo)
        run: conda list
      - name: Export frozen conda environment (vcf-geo)
        run: conda list --explicit --md5 > notebook-python-vcf-geo-frozen.yaml
      - name: Upload frozen conda environment as artifact (vcf-geo)
        uses: actions/upload-artifact@v4
        with:
          name: notebook-python-vcf-geo-frozen
          path: notebook-python-vcf-geo-frozen.yaml
          if-no-files-found: error
          retention-days: 14
  commit:
    if: github.ref_name == 'main' && github.repository_owner == 'jdblischak' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: python
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download frozen conda environment
        uses: actions/download-artifact@v4
        with:
          name: notebook-python-frozen
          path: environments/
      - name: Download frozen conda environment (vcf-geo)
        uses: actions/download-artifact@v4
        with:
          name: notebook-python-vcf-geo-frozen
          path: environments/
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "runneradmin@users.noreply.github.com"
      - name: Push environment files to GitHub
        run: |
          git add environments/
          git commit -m "Update conda envs for notebook Python kernels" || echo "nothing to commit"
          git pull --rebase origin main
          git push origin main
